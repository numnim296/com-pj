{"version":3,"sources":["logo.svg","views/main.js","views/b2s.js","functions/function.js","views/elimination.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","navigate","useNavigate","nextPage","page","className","style","marginTop","Row","Col","sm","Card","CardTitle","CardText","Button","onClick","color","disabled","B2s","useState","bit2string","setBit2string","result","setResult","class","alignItems","Input","marginBottom","width","value","type","name","id","onChange","e","target","b2s","axios","get","then","response","console","log","data","catch","err","res","Elimination","a00","seta00","a01","seta01","a02","seta02","a10","seta10","a11","seta11","a12","seta12","a20","seta20","a21","seta21","a22","seta22","b1","setb1","b2","setb2","b3","setb3","x0","setx0","x1","setx1","x2","setx2","marginLeft","post","apiHost","getElimination","A","b","routes","path","element","App","routing","useRoutes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4bb43850.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { CardTitle, CardText, Row, Col, Button, Card } from \"reactstrap\";\nimport \"../App.css\";\n// import { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction Main() {\n  const navigate = useNavigate();\n\n  const nextPage = (page) => {\n    navigate(\"/\"+page);\n  }\n\n  return (\n    <div>\n      <h1 className=\"text-center\" style={{ marginTop: \"5%\" }}>\n        เลือกบท\n      </h1>\n      <Row style={{ marginTop: \"5%\" }}>\n        <Col sm=\"2\"></Col>\n\n        <Col sm=\"8\">\n          <div className=\"text-center\">\n            <Row>\n              <Col sm=\"6\">\n                <Card>\n                  <CardTitle>\n                    <h3 style={{ marginTop: \"10px\" }}>บทที่ 1</h3>\n                  </CardTitle>\n                  <CardText>\n                    <h4>แปลงเลขฐาน 2</h4>\n                  </CardText>\n                 \n                    <Button onClick={()=>{nextPage(\"b2s\")}} color=\"primary\">\n                      <h3 style={{ marginTop: \"10px\" }}>เริ่ม</h3>\n                    </Button>\n                  \n                </Card>\n              </Col>\n\n              <Col sm=\"6\">\n                <Card>\n                  <CardTitle>\n                    <h3 style={{ marginTop: \"10px\" }}>บทที่ 2</h3>\n                  </CardTitle>\n                  <CardText>\n                    <h4>Elimination phase and Back subsituation</h4>\n                  </CardText>\n                  <Button onClick={()=>{nextPage(\"elimination\")}} color=\"primary\">\n                    <h3 style={{ marginTop: \"10px\" }}>เริ่ม</h3>\n                  </Button>\n                </Card>\n              </Col>\n            </Row>\n\n            <Row className=\"text-center\" style={{ marginTop: \"20px\" }}>\n              <Col sm=\"6\">\n                <Card>\n                  <CardTitle>\n                    <h3 style={{ marginTop: \"10px\" }}>บทที่ 3</h3>\n                  </CardTitle>\n                  <CardText>\n                    <h4>.</h4>\n                  </CardText>\n                  <Button disabled>\n                    <h3 style={{ marginTop: \"10px\" }}>เริ่ม</h3>\n                  </Button>\n                </Card>\n              </Col>\n\n              <Col sm=\"6\">\n                <Card>\n                  <CardTitle>\n                    <h3 style={{ marginTop: \"10px\" }}>บทที่ 4</h3>\n                  </CardTitle>\n                  <CardText>\n                    <h4>.</h4>\n                  </CardText>\n                  <Button disabled>\n                    <h3 style={{ marginTop: \"10px\" }}>เริ่ม</h3>\n                  </Button>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Col>\n        <Col sm=\"2\"></Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport {\n  CardTitle,\n  CardText,\n  Row,\n  Col,\n  Button,\n  Card,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n} from \"reactstrap\";\nimport \"../App.css\";\nimport { getB2s } from \"../functions/function\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction B2s() {\n  const navigate = useNavigate();\n  const [bit2string, setBit2string] = useState();\n  const [result, setResult] = useState(\"\");\n  const generate = () => {\n    getB2s(bit2string).then((res) => {\n      setResult(res);\n    });\n  };\n  \n  const back = () => {\n    navigate(\"/\");\n  }\n\n  return (\n    <div class=\"body\">\n      <Row style={{ marginTop: \"15%\" }} >\n        <Col sm=\"2\"></Col>\n        <Col sm=\"8\">\n          <div>\n            <Row>\n              <Col sm=\"2\"></Col>\n              <Col sm=\"8\">\n                <Card style={{ alignItems: \"center\" }}>\n                  <CardTitle>\n                    <h2 style={{ marginTop: \"10px\" }}>เลขฐาน 2</h2>\n                  </CardTitle>\n                  <Input\n                    style={{\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 500,\n                    }}\n                    value={bit2string}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => setBit2string(e.target.value)}\n                  />\n                  <h4>ผลลัพธ์: {result}</h4>\n                  <Row>\n                    <Col sm=\"8\">\n                      <Button onClick={generate} color=\"primary\">\n                        <div style={{ width: 300 }}>\n                          <h3 style={{ marginTop: \"10px\" }}>คำนวณ</h3>\n                        </div>\n                      </Button>\n                    </Col>\n                    <Col sm=\"4\">\n                      <Button onClick={back} color=\"secondary\">\n                        <div style={{ width: 100 }}>\n                          <h3 style={{ marginTop: \"10px\" }}>กลับ</h3>\n                        </div>\n                      </Button>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n              <Col sm=\"2\"></Col>\n            </Row>\n          </div>\n        </Col>\n        <Col sm=\"2\"></Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default B2s;\n","import axios from \"axios\";\n\nconst apiHost = \"http://127.0.0.1:8000\";\n\nexport const getB2s = (b2s) => {\n    return axios\n        .get(apiHost + `/b2s/${b2s}`)\n        .then(response => {\n            console.log(response.data);\n            return response.data;\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const getElimination = (data) => {\n    return axios\n        .post(apiHost + `/elimination`, data)\n        .then(response => {\n            console.log(response.data);\n            return response.data;\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\n","import React, { useState } from \"react\";\nimport {\n  CardTitle,\n  CardText,\n  Row,\n  Col,\n  Button,\n  Card,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n} from \"reactstrap\";\nimport \"../App.css\";\nimport { getB2s } from \"../functions/function\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getElimination } from \"../functions/function\";\n\nfunction Elimination() {\n  const navigate = useNavigate();\n  const [a00, seta00] = useState();\n  const [a01, seta01] = useState();\n  const [a02, seta02] = useState();\n  const [a10, seta10] = useState();\n  const [a11, seta11] = useState();\n  const [a12, seta12] = useState();\n  const [a20, seta20] = useState();\n  const [a21, seta21] = useState();\n  const [a22, seta22] = useState();\n\n  const [b1, setb1] = useState();\n  const [b2, setb2] = useState();\n  const [b3, setb3] = useState();\n\n  const [x0, setx0] = useState();\n  const [x1, setx1] = useState();\n  const [x2, setx2] = useState();\n\n\n  const back = () => {\n    navigate(\"/\");\n  };\n\n  const generate = () => {\n    const data = {\n      A:[[a00,a01,a02],[a10,a11,a12],[a20,a21,a22]],\n      b:[b1,b2,b3]\n      \n    };\n    getElimination(data).then((res) => {\n      setx0(res[0])\n      setx1(res[1])\n      setx2(res[2])\n    });\n  };\n\n  return (\n    <div>\n      <Row style={{ marginTop: \"5%\" }}>\n        <Col sm=\"4\"></Col>\n        <Col sm=\"4\">\n          <Card style={{ alignItems: \"center\" }}>\n            <Row style={{ marginTop: \"50px\" }}>\n              <Col>\n                <h3>A</h3>\n              </Col>\n              <Col style={{ marginLeft: \"350px\" }}>\n                <h3>B</h3>\n              </Col>\n            </Row>\n\n            <Row>\n              <div className=\"text-center\">\n                <Row>\n                  <Input\n                    style={{\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={a00}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => seta00(e.target.value)}\n                  />\n                  <Input\n                    style={{\n                      marginLeft: \"20px\",\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={a01}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => seta01(e.target.value)}\n                  />\n                  <Input\n                    style={{\n                      marginLeft: \"20px\",\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={a02}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => seta02(e.target.value)}\n                  />\n                </Row>\n\n                <Row>\n                  <Input\n                    style={{\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={a10}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => seta10(e.target.value)}\n                  />\n                  <Input\n                    style={{\n                      marginLeft: \"20px\",\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={a11}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => seta11(e.target.value)}\n                  />\n                  <Input\n                    style={{\n                      marginLeft: \"20px\",\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={a12}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => seta12(e.target.value)}\n                  />\n                </Row>\n\n                <Row>\n                  <Input\n                    style={{\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={a20}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => seta20(e.target.value)}\n                  />\n                  <Input\n                    style={{\n                      marginLeft: \"20px\",\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={a21}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => seta21(e.target.value)}\n                  />\n                  <Input\n                    style={{\n                      marginLeft: \"20px\",\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={a22}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => seta22(e.target.value)}\n                  />\n                </Row>\n              </div>\n\n              <div className=\"text-center\" style={{ marginLeft: \"100px\" }}>\n                <Row>\n                  <Input\n                    style={{\n                      marginLeft: \"20px\",\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={b1}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => setb1(e.target.value)}\n                  />\n                </Row>\n                <Row>\n                  <Input\n                    style={{\n                      marginLeft: \"20px\",\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={b2}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => setb2(e.target.value)}\n                  />\n                </Row>\n                <Row>\n                  <Input\n                    style={{\n                      marginLeft: \"20px\",\n                      marginTop: \"20px\",\n                      marginBottom: \"20px\",\n                      width: 100,\n                    }}\n                    value={b3}\n                    type=\"text\"\n                    name=\"bit2string\"\n                    id=\"bit2string\"\n                    onChange={(e) => setb3(e.target.value)}\n                  />\n                </Row>\n              </div>\n            </Row>\n            <h4 style={{ marginBottom: \"10px\" }}>x0: {x0}</h4>\n            <h4 style={{ marginBottom: \"10px\" }}>x1: {x1}</h4>\n            <h4 style={{ marginBottom: \"10px\" }}>x2: {x2}</h4>\n            <Row style={{ marginBottom: \"30px\" }}>\n              <Col sm=\"8\">\n                <Button onClick={generate} color=\"primary\">\n                  <div style={{ width: 300 }}>\n                    <h3 style={{ marginTop: \"10px\" }}>คำนวณ</h3>\n                  </div>\n                </Button>\n              </Col>\n              <Col sm=\"4\">\n                <Button onClick={back} color=\"secondary\">\n                  <div style={{ width: 100 }}>\n                    <h3 style={{ marginTop: \"10px\" }}>กลับ</h3>\n                  </div>\n                </Button>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n\n        <Col sm=\"4\"></Col>\n      </Row>\n    </div>\n  );\n}\nexport default Elimination;\n","import React from \"react\";\n// import { Navigate } from 'react-router-dom';\nimport Main from \"./views/main\";\nimport B2s from \"./views/b2s\";\nimport Elimination from \"./views/elimination\";\n\nconst routes = [\n  {\n    path: \"/\",\n    element: <Main />,\n  },\n  {\n    path: \"commath-pj\",\n    element: <Main />,\n  },\n  {\n    path: \"b2s\",\n    element: <B2s />,\n  },\n  {\n    path: \"elimination\",\n    element: <Elimination />,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport routes from \"./routes\";\nimport { useRoutes } from \"react-router-dom\";\n\nfunction App() {\n  const routing = useRoutes(routes);\n  return <div>{routing}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}